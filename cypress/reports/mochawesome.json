{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-07-05T17:45:32.445Z",
    "end": "2022-07-05T17:46:46.816Z",
    "duration": 74371,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "90bdc30e-146b-4c3d-9ede-6ee254771f8f",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c15849ec-6eb7-4d5c-a0c8-2d9143bfc0fe",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "c0db1cf8-0ad0-41c1-8f20-970f3589e1c8",
              "parentUUID": "c15849ec-6eb7-4d5c-a0c8-2d9143bfc0fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0db1cf8-0ad0-41c1-8f20-970f3589e1c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "aa211350-389c-46d3-8d01-43e6bf310888",
              "parentUUID": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b7ead4b2-474f-4119-aa81-519d5bd5e17c",
              "parentUUID": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "61e50865-797f-44fc-a22a-6f9ec820e46f",
              "parentUUID": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "cabee725-2f3e-4588-8c43-c7eea8103583",
              "parentUUID": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "616219b1-9c46-4c4a-b6d7-ef2ffae37f26",
              "parentUUID": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "ce75e0ab-737e-4df9-bf87-5cfe503ea4fe",
              "parentUUID": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "be133167-b6e6-4005-9af7-81454ab0188f",
              "parentUUID": "0c9f4d51-7e76-4861-8bf9-581a5f965b81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa211350-389c-46d3-8d01-43e6bf310888",
            "b7ead4b2-474f-4119-aa81-519d5bd5e17c",
            "61e50865-797f-44fc-a22a-6f9ec820e46f",
            "cabee725-2f3e-4588-8c43-c7eea8103583",
            "616219b1-9c46-4c4a-b6d7-ef2ffae37f26",
            "ce75e0ab-737e-4df9-bf87-5cfe503ea4fe",
            "be133167-b6e6-4005-9af7-81454ab0188f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "edee25ee-6aea-4333-ae98-7fdec393598c",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "da0a7352-3507-4ec4-86df-510ee9d678b2",
              "parentUUID": "edee25ee-6aea-4333-ae98-7fdec393598c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "0d197299-613d-4363-8c11-ac5bebedbf77",
              "parentUUID": "edee25ee-6aea-4333-ae98-7fdec393598c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da0a7352-3507-4ec4-86df-510ee9d678b2",
            "0d197299-613d-4363-8c11-ac5bebedbf77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c3e017a-8ef9-4ed0-ba1f-3800ea48c30b",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "c7260205-83cf-4080-855b-fc056c544b57",
              "parentUUID": "9c3e017a-8ef9-4ed0-ba1f-3800ea48c30b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "a91953d6-c4fe-46af-9d87-002d45c333e7",
              "parentUUID": "9c3e017a-8ef9-4ed0-ba1f-3800ea48c30b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "3a6f75ee-d86b-4660-b8e8-7ee5c63ebdea",
              "parentUUID": "9c3e017a-8ef9-4ed0-ba1f-3800ea48c30b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "edb08631-eea5-46cf-b3b9-a9706a344908",
              "parentUUID": "9c3e017a-8ef9-4ed0-ba1f-3800ea48c30b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7260205-83cf-4080-855b-fc056c544b57",
            "a91953d6-c4fe-46af-9d87-002d45c333e7",
            "3a6f75ee-d86b-4660-b8e8-7ee5c63ebdea",
            "edb08631-eea5-46cf-b3b9-a9706a344908"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 274,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "954a3910-f038-4d30-8b65-7b06b3577a15",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "6e25a2d8-6513-4543-b327-9a2f54cf9a0f",
              "parentUUID": "954a3910-f038-4d30-8b65-7b06b3577a15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "94ec0388-92d5-4e6c-8de8-e98d8df5cc66",
              "parentUUID": "954a3910-f038-4d30-8b65-7b06b3577a15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e25a2d8-6513-4543-b327-9a2f54cf9a0f",
            "94ec0388-92d5-4e6c-8de8-e98d8df5cc66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8087e7cf-d62c-4c10-b0a3-87932b56297b",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "602e26b3-706d-4ad5-99c0-0fc4df260c62",
              "parentUUID": "8087e7cf-d62c-4c10-b0a3-87932b56297b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "16a0fd44-60c6-4c2e-80ad-a90c5962e619",
              "parentUUID": "8087e7cf-d62c-4c10-b0a3-87932b56297b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "602e26b3-706d-4ad5-99c0-0fc4df260c62",
            "16a0fd44-60c6-4c2e-80ad-a90c5962e619"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1106e028-082d-4a6a-966b-5c21bc180533",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "06ae2710-4b93-44a7-a491-e881b1e562dc",
              "parentUUID": "1106e028-082d-4a6a-966b-5c21bc180533",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 7703,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "9c07761b-5160-4c1f-a013-5aab5d3f8df6",
              "parentUUID": "1106e028-082d-4a6a-966b-5c21bc180533",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06ae2710-4b93-44a7-a491-e881b1e562dc",
            "9c07761b-5160-4c1f-a013-5aab5d3f8df6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3fa2e678-c851-42b8-9cd7-f5c8d5d0ffac",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 1925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "96648bc4-7802-419d-8d64-22c3e2721ac3",
              "parentUUID": "3fa2e678-c851-42b8-9cd7-f5c8d5d0ffac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 7765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "af5ac19f-f632-4225-8fe3-43cd7a90b885",
              "parentUUID": "3fa2e678-c851-42b8-9cd7-f5c8d5d0ffac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "9066096a-6c0c-4b38-b315-d97f6a11b874",
              "parentUUID": "3fa2e678-c851-42b8-9cd7-f5c8d5d0ffac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96648bc4-7802-419d-8d64-22c3e2721ac3",
            "af5ac19f-f632-4225-8fe3-43cd7a90b885",
            "9066096a-6c0c-4b38-b315-d97f6a11b874"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10682,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55611b26-0738-4527-b72a-c1ce0b937b64",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "6170fedd-be39-437e-aa80-7d6257f2bdaf",
              "parentUUID": "55611b26-0738-4527-b72a-c1ce0b937b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "56658abc-4a49-4d5d-91c6-aad5bc7848e4",
              "parentUUID": "55611b26-0738-4527-b72a-c1ce0b937b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "a3e776d0-d675-409a-a46f-8e5d96d51ea4",
              "parentUUID": "55611b26-0738-4527-b72a-c1ce0b937b64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c7512571-cd6a-46a2-afdd-374eedc6bd79",
              "parentUUID": "55611b26-0738-4527-b72a-c1ce0b937b64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6170fedd-be39-437e-aa80-7d6257f2bdaf",
            "56658abc-4a49-4d5d-91c6-aad5bc7848e4",
            "a3e776d0-d675-409a-a46f-8e5d96d51ea4",
            "c7512571-cd6a-46a2-afdd-374eedc6bd79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2326,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4243,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "07a6dbdc-014f-453d-ab97-5cc881597cee",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4200,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "00c7fc51-c739-4e38-96e1-4fb69a95db13",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a19741af-2e88-42c0-a8b5-83384c1474a3",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4195,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b1e0a68e-d882-458d-bb6f-39dee41f0e86",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4202,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5d6e9f78-1e50-4077-8c9b-dbe4f08c95e1",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4485dda9-2d39-4486-abc8-fab6302cc579",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4225,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6d776d15-2b50-487c-9167-f452eaccd86a",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4207,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "172ef416-40d9-4ff0-ab4e-777686c02290",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4218,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8fe35ecf-2ae2-4130-8a0e-9088a266bb5f",
              "parentUUID": "3810bfd6-15f6-48dc-8c6e-5c3d3c68b425",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "07a6dbdc-014f-453d-ab97-5cc881597cee",
            "00c7fc51-c739-4e38-96e1-4fb69a95db13",
            "a19741af-2e88-42c0-a8b5-83384c1474a3",
            "b1e0a68e-d882-458d-bb6f-39dee41f0e86",
            "5d6e9f78-1e50-4077-8c9b-dbe4f08c95e1",
            "4485dda9-2d39-4486-abc8-fab6302cc579",
            "6d776d15-2b50-487c-9167-f452eaccd86a",
            "172ef416-40d9-4ff0-ab4e-777686c02290",
            "8fe35ecf-2ae2-4130-8a0e-9088a266bb5f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37911,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f9b86b4d-e67c-49b0-97dc-6b51e0ff7546",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4f77c329-88ac-422a-b8e3-9890602591ae",
              "parentUUID": "f9b86b4d-e67c-49b0-97dc-6b51e0ff7546",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4228,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "91239ead-6e8e-46cc-97c3-a8db41046714",
              "parentUUID": "f9b86b4d-e67c-49b0-97dc-6b51e0ff7546",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4218,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:35945/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:35945/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:35945/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:35945/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:35945/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:35945/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0ef63081-1e6f-4cad-97b6-103a0c185b01",
              "parentUUID": "f9b86b4d-e67c-49b0-97dc-6b51e0ff7546",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4f77c329-88ac-422a-b8e3-9890602591ae",
            "91239ead-6e8e-46cc-97c3-a8db41046714",
            "0ef63081-1e6f-4cad-97b6-103a0c185b01"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12673,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f55de8f-b7ba-4f69-97ee-cbc27cb8abf2",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 258,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35945/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35945/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35945/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35945/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35945/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35945/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35945/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "7b6e966b-892a-4fc1-a53b-2ee077bd2b7a",
              "parentUUID": "2f55de8f-b7ba-4f69-97ee-cbc27cb8abf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 243,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:35945/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:35945/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:35945/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:35945/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:35945/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:35945/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:35945/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:35945/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:35945/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:35945/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:35945/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:35945/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "24565e05-9f2f-4fda-a07f-475861245506",
              "parentUUID": "2f55de8f-b7ba-4f69-97ee-cbc27cb8abf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7b6e966b-892a-4fc1-a53b-2ee077bd2b7a",
            "24565e05-9f2f-4fda-a07f-475861245506"
          ],
          "pending": [],
          "skipped": [],
          "duration": 501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}